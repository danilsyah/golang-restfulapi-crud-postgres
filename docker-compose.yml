# version: '3.9'
# services:
#   app:
#     container_name: golang_container
#     environment:
#       - POSTGRES_URL=${POSTGRES_URL}
#     tty: true
#     build: .
#     ports:
#       - 8000:8080
#     restart: on-failure
#     volumes:
#       - .:/app
#     depends_on:
#       - postgresdb
#     networks:
#       - learning

#   postgresdb:
#     image: postgres:latest
#     container_name: postgres_container
#     environment:
#       - POSTGRES_USER=${DB_USER}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_DB=${DB_NAME}
#       - DATABASE_HOST=${DB_HOST}
#     ports:
#       - '1234:5432'
#     volumes:
#       - ./pg_data:/var/lib/postgresql/data
#     networks:
#       - learning

#   postgresdb_test:
#     image: postgres:latest
#     container_name: postgres_test_container
#     environment:
#       - POSTGRES_USER=${TEST_DB_USER}
#       - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
#       - POSTGRES_DB=${TEST_DB_NAME}
#       - DATABASE_HOST=${TEST_DB_HOST}
#     ports:
#       - '4568:5432'
#     volumes:
#       - ./pg_data_test:/var/lib/postgresql/data
#     networks:
#       - learning

# volumes:
#   pg_data:
#   pg_data_test:

# # Networks to be created to facilitate communication between containers
# networks:
#   learning:
#     driver: bridge

# ====== OLD ===================================================================
version: "3.4"

services:
    app:
        container_name: golang_container
        environment:
          - POSTGRES_URL=${POSTGRES_URL}
        tty: true
        build: .
        ports:
          - 8000:8080
        restart: on-failure
        volumes:
          - .:/app
        depends_on:
          - postgresdb
        networks:
          - learning
    pgAdmin:
        restart: always
        image: dpage/pgadmin4
        ports:
          - "8000:80"
        environment:
          PGADMIN_DEFAULT_EMAIL: admin@example.com
          PGADMIN_DEFAULT_PASSWORD: 1234
        volumes:
          - pgadmin:/var/lib/pgadmin
    postgres:
        restart: always
        image: postgres
        container_name: "postgres_container"
        ports:
          - "5432:5432"
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: db_golang_api
        volumes:
          - pgvol:/var/lib/postgresql/data
          - ./db_golang_api.sql:/docker-entrypoint-initdb.d/data.sql

volumes:
  pgvol:
  pgadmin: